{"version":3,"sources":["components/songs.jsx","components/Context.jsx","components/PlayerControls.jsx","components/PlayerInfoMusic.jsx","components/Player.jsx","components/BottomNav.jsx","components/ListMusic.jsx","components/MyPlayList.jsx","App.js","reportWebVitals.js","index.js"],"names":["All_song","title","artist","img_src","src","favorite","Context","React","createContext","Provider","ContextApp","children","useState","currentSongIndex","setCurrentSongIndex","page","setPage","playing","muted","volume","played","seeking","loop","fovarite","playerState","setPlayerState","songs","setSongs","favoritePlayList","id","tracks","allSongs","playList","setPlayList","handlePlayPause","value","PickPlayList","index","filter","track","prevState","forEach","song","ev","newValue","parseFloat","changeState","forwards","temp","length","MySlider","withStyles","root","color","height","padding","thumb","backgroundColor","boxShadow","active","valueLabel","left","top","background","rail","opacity","mark","width","marginTop","markActive","Slider","ValueLabelComponent","props","open","Tooltip","enterTouchDelay","placement","useStyles","makeStyles","iconStyleBig","fontSize","iconStyle","sliderWrap","display","flexDirection","time","justifyContent","controls","PlayerControls","onPlayPause","onMuted","onLoop","onVolumeChange","onSeek","onSeekMouseDown","onSeekMouseUp","elapsedTime","totalDuration","SkipSong","onFovorite","songfavorite","useContext","console","log","classes","className","min","max","onChange","onMouseDown","onChangeCommitted","Typography","variant","style","IconButton","onClick","arial-label","defaultValue","PlayerInfoMusic","Card","CardContent","component","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","Player","handleFovorite","handleMuted","handleLoop","handleVolumeChange","handleProgress","handleSeekChange","handleSeekMouseDown","playerRef","useRef","currentTime","current","getCurrentTime","duration","getDuration","playerHidden","push","join","url","ref","onProgress","onEnded","seekTo","BottomNav","BottomNavigation","to","BottomNavigationAction","label","icon","ListMusic","PickSong","map","item","ListItem","button","Avatar","alt","ListItemText","primary","secondary","MyPlayList","playListArr","key","App","class","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA4EeA,EA5EA,CACd,CACCC,MAAO,WACPC,OAAQ,QACRC,QAAS,qBACTC,IAAK,+BACLC,UAAU,GAEX,CACCJ,MAAO,cACPC,OAAQ,UACRC,QAAS,uBACTC,IAAK,oCACLC,UAAU,GAEX,CACCJ,MAAO,mDACPC,OAAQ,UACRC,QAAS,uBACTC,IAAK,yEACLC,UAAU,GAEX,CACCJ,MAAO,QACPC,OAAQ,OACRC,QAAS,oBACTC,IAAK,2BACLC,UAAU,GAEX,CACCJ,MAAO,eACPC,OAAQ,oBACRC,QAAS,kBACTC,IAAK,+CACLC,UAAU,GAEX,CACCJ,MAAO,sBACPC,OAAQ,eACRC,QAAS,qBACTC,IAAK,sEACLC,UAAU,GAEX,CACCJ,MAAO,WACPC,OAAQ,UACRC,QAAS,kCACTC,IAAK,iCACLC,UAAU,GAEX,CACCJ,MAAO,SACPC,OAAQ,SACRC,QAAS,+BACTC,IAAK,8BACLC,UAAU,GAEX,CACCJ,MAAO,kBACPC,OAAQ,eACRC,QAAS,8CACTC,IAAK,6CACLC,UAAU,GAEX,CACCJ,MAAO,OACPC,OAAQ,WACRC,QAAS,+BACTC,IAAK,8BACLC,UAAU,I,OClECC,EAAUC,IAAMC,cAAc,IAErCC,EAAWH,EAAQG,SAwKVC,EAtKI,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAAe,EACeC,mBAAS,GADxB,mBAC1BC,EAD0B,KACRC,EADQ,OAETF,oBAAS,GAFA,mBAE1BG,EAF0B,KAEpBC,EAFoB,OAGKJ,mBAAS,CAC3CK,SAAS,EACTC,OAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,UAAU,IAVmB,mBAG1BC,EAH0B,KAGbC,EAHa,OAaPb,mBAASZ,GAbF,mBAa1B0B,EAb0B,KAanBC,EAbmB,OAeAf,mBAAS,CACtCgB,iBAAkB,CACdC,GAAI,mBACJ5B,MAAO,gEACPE,QAAS,uBACTC,IAAK,yEACLC,UAAU,EACVyB,OAAQ,IAEZC,SAAU,CACNF,GAAI,IACJ5B,MAAO,qBACPE,QAAS,uBACTC,IAAK,yEACLC,UAAU,EACVyB,OAAQ9B,KA9BiB,mBAe1BgC,EAf0B,KAehBC,EAfgB,KA2E3BC,EAAkB,WACpBT,EAAe,2BAAMD,GAAP,IAAoBP,SAAUO,EAAYP,YA0D5D,OACI,cAACR,EAAD,CAAU0B,OAAK,GACXC,aAtGa,SAACD,GAClBR,EAASQ,GACTrB,EAAoB,IAqGhBY,QACAb,mBACAE,OACAC,WALW,iCAMXH,GANW,oCAOXC,GAPW,0BAhGF,SAACuB,GACXxB,IAAqBwB,EACpBH,KAEApB,EAAoBuB,GACpBZ,EAAe,2BAAMD,GAAP,IAAoBP,SAAS,SA2FhC,4BASXO,GATW,+BAUXC,GAVW,gCAvFI,WAChBC,EAAMb,GAAkBR,UACvB4B,EAAY,2BACLD,GADI,IAEHJ,iBAAiB,2BACVI,EAASJ,kBADA,IAEZE,OAAO,YAAME,EAASJ,iBAAiBE,OAAOQ,QAAO,SAAAC,GAAK,OAAIA,IAAUb,EAAMb,YAI1Fa,EAAMb,GAAkBR,UACxB4B,EAAY,2BACLD,GADI,IAEHJ,iBAAiB,2BACVI,EAASJ,kBADA,IAEZE,OAAO,CAAGJ,EAAMb,IAAV,mBAAgCmB,EAASJ,iBAAiBE,cAIhF,IAAMU,EAAS,YAAOd,GAEtBc,EAAUC,SAAQ,SAAAC,GACd,OAAOA,IAAShB,EAAMb,GAAoB6B,EAAKrC,UAAYqC,EAAKrC,SAAW,QAE/EsB,EAAS,YAAIa,OA+DE,gCAYXN,GAZW,6BAxDC,WAChBT,EAAe,2BAAMD,GAAP,IAAoBN,OAAQM,EAAYN,YAuDvC,4BApDA,WACfO,EAAe,2BAAMD,GAAP,IAAoBF,MAAOE,EAAYF,WAmDtC,oCAhDQ,SAACqB,EAAIC,GAC5BnB,EAAe,2BACRD,GADO,IAEVL,OAAQ0B,WAAWD,EAAW,KAC9B1B,MAAoB,IAAb0B,QA4CI,gCAxCI,SAACE,GAChBtB,EAAYH,SACZI,EAAe,2BAAMD,GAAgBsB,OAsC1B,kCAlCM,SAACH,EAAIC,GAC1BnB,EAAe,2BAAKD,GAAN,IAAmBJ,OAAQyB,WAAWD,EAAW,WAiChD,qCA9BS,SAACD,GACzBlB,EAAe,2BAAKD,GAAN,IAAmBH,SAAS,QA6B3B,0BA1BF,WAAsB,IAArB0B,IAAoB,yDAE9BjC,EADAiC,EACoB,WAChB,IAAIC,EAAOnC,EAOX,QANAmC,EAEWtB,EAAMuB,OAAS,IACtBD,EAAO,GAGJA,GAGS,WAChB,IAAIA,EAAOnC,EAKX,QAJAmC,EACW,IACPA,EAAOtB,EAAMuB,OAAS,GAEnBD,OAOA,+BAoBXvB,GApBW,sBAqBXC,GArBW,4BAsBXF,GAtBW,+BAuBXC,GAvBW,yBAwBXO,GAxBW,GAAf,SA0BKrB,K,8PCtJPuC,EAAWC,YAAW,CACxBC,KAAM,CACJC,MAAO,OACPC,OAAQ,EACRC,QAAS,UAEXC,MAAO,CAELC,gBAAiB,OACjBC,UAAW,qFAEbC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBACNC,KAAM,GACN,MAAO,CACLC,WAAY,cACZV,MAAO,SAGXd,MAAO,CACLe,OAAQ,GAEVU,KAAM,CACJV,OAAQ,EACRW,QAAS,IAGXC,KAAM,CACJT,gBAAiB,MACjBH,OAAQ,EACRa,MAAO,EACPC,WAAY,GAEdC,WAAY,CACVJ,QAAS,EACTR,gBAAiB,iBApCNN,CAsCZmB,KAEL,SAASC,EAAoBC,GAAQ,IAC3B7D,EAA0B6D,EAA1B7D,SAAU8D,EAAgBD,EAAhBC,KAAMtC,EAAUqC,EAAVrC,MAExB,OACE,cAACuC,EAAA,EAAD,CAASD,KAAMA,EAAME,gBAAiB,EAAGC,UAAU,MAAM3E,MAAOkC,EAAhE,SACGxB,IAMP,IAAMkE,EAAYC,YAAW,CACzBC,aAAc,CACVC,SAAU,GACV3B,MAAO,OACPE,QAAS,KAEb0B,UAAW,CACP5B,MAAO,OACP2B,SAAU,GACVzB,QAAS,IACT,UAAW,IAIf2B,WAAY,CACRC,QAAS,OACTC,cAAe,UAEnBC,KAAM,CACFF,QAAS,OACTG,eAAgB,iBAEpBC,SAAU,CACNJ,QAAS,OACTG,eAAgB,mBAiHTE,MA7Gf,YAcK,IAbDhE,EAaA,EAbAA,YACAiE,EAYA,EAZAA,YACAC,EAWA,EAXAA,QACAC,EAUA,EAVAA,OACAC,EASA,EATAA,eAAexE,EASf,EATeA,OACfyE,EAQA,EARAA,OACAC,EAOA,EAPAA,gBACAC,EAMA,EANAA,cACAC,EAKA,EALAA,YACAC,EAIA,EAJAA,cACAC,EAGA,EAHAA,SACAC,EAEA,EAFAA,WAEA,KADAC,aAGoCC,qBAAW/F,IAAvCoB,EAFR,EAEQA,MAAOb,EAFf,EAEeA,iBAEXyF,QAAQC,IAAI,SAChB,IAAMC,EAAU3B,IAGhB,OACI,qCACI,sBAAK4B,UAAWD,EAAQtB,WAAxB,UACI,cAAChC,EAAD,CACIwD,IAAK,EACLC,IAAK,IACLxE,MAAgB,IAATf,EACPmD,oBAAqB,SAACC,GAAD,OACjB,cAAC,EAAD,2BAAyBA,GAAzB,IAAgCrC,MAAO6D,MAE3CY,SAAUf,EACVgB,YAAaf,EACbgB,kBAAmBf,IAEvB,uBAAMU,UAAWD,EAAQnB,KAAzB,UACI,cAAC0B,EAAA,EAAD,CACIC,QAAQ,QACRC,MAAO,GAFX,SAIKjB,IAEL,cAACe,EAAA,EAAD,CACIC,QAAQ,QACRC,MAAO,GAFX,SAIKhB,UAIb,sBAAKQ,UAAWD,EAAQjB,SAAxB,UACI,cAAC2B,EAAA,EAAD,CAAYC,QAAS,kBAAKxB,KAAUc,UAAWD,EAAQvB,UAAWmC,cAAY,SAA9E,SAEQ5F,EAAYF,KACR,cAAC,IAAD,CAAe0D,SAAS,YACxB,cAAC,IAAD,CAAYA,SAAS,cAIjC,cAACkC,EAAA,EAAD,CAAYC,QAAS,kBAAMjB,GAAS,IAAQO,WAAWD,EAAQvB,UAAWuB,EAAQzB,cAAcqC,cAAY,SAA5G,SACI,cAAC,IAAD,CAAkBpC,SAAS,cAG/B,cAACkC,EAAA,EAAD,CAAYC,QAAS,kBAAM1B,KAAgBgB,WAAWD,EAAQvB,UAAWuB,EAAQzB,cAAcqC,cAAY,SAA3G,SAEQ5F,EAAYP,QACR,cAAC,IAAD,CACI+D,SAAS,YAEb,cAAC,IAAD,CACIA,SAAS,cAKzB,cAACkC,EAAA,EAAD,CAAYC,QAAS,kBAAMjB,KAAaO,WAAWD,EAAQvB,UAAWuB,EAAQzB,cAAcqC,cAAY,SAAxG,SACI,cAAC,IAAD,CAAcpC,SAAS,cAE3B,cAACkC,EAAA,EAAD,CAAYC,QAAS,kBAAMhB,KAAcM,UAAWD,EAAQvB,UAAWmC,cAAY,SAAnF,SAEQ1F,EAAMb,GAAkBR,SACxB,cAAC,IAAD,CAAc2E,SAAS,YACvB,cAAC,IAAD,CAAoBA,SAAS,iBAMzC,sBAAKyB,UAAU,cAAf,UACI,cAACS,EAAA,EAAD,CAAYC,QAAS,kBAAKzB,KAAWe,UAAWD,EAAQvB,UAAWmC,cAAY,SAA/E,SAEQ5F,EAAYN,MACR,cAAC,IAAD,CAAe8D,SAAS,YACxB,cAAC,IAAD,CAAUA,SAAS,cAI/B,cAACV,EAAA,EAAD,CACIoC,IAAK,EACLC,IAAK,IACLU,aAAc,IACdT,SAAUhB,W,mCC5Kf0B,OAvBf,YAAkC,IAAR5E,EAAO,EAAPA,KACtB,OACF,mCACC,eAAC6E,EAAA,EAAD,CAAMd,UAAU,gBAAhB,UACC,qBAAKA,UAAU,qBAAqBrG,IAAKsC,EAAKvC,QAASF,MAAM,QAC7D,sBAAKwG,UAAU,sBAAf,UACC,eAACe,EAAA,EAAD,CAAaf,UAAU,sBAAvB,UACC,cAACM,EAAA,EAAD,CAAYN,UAAU,uBAAuBgB,UAAU,KAAKT,QAAQ,KAAKC,MAAO,CAAC5D,MAAO,QAAxF,SACEX,EAAKzC,QAEP,cAAC8G,EAAA,EAAD,CAAYN,UAAU,wBAAwBO,QAAQ,YAAY3D,MAAM,gBAAgB4D,MAAO,CAAC5D,MAAO,OAAQY,QAAS,OAAxH,SACEvB,EAAKxC,YAGR,cAACgH,EAAA,EAAD,CAAYT,UAAU,8BAA8BW,cAAY,SAAhE,SACC,cAAC,IAAD,CAAcX,UAAU,2BAA2BzB,SAAS,uBCV5D0C,GAAS,SAACC,GACZ,GAAIC,MAAMD,GACR,MAAM,QAER,IAAME,EAAO,IAAIC,KAAe,IAAVH,GAChBI,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKN,EAAKO,gBAAgBC,WAAWC,SAAS,EAAG,KACvD,OAAIP,EACI,GAAN,OAAUA,EAAV,YAAgBE,EAAGI,WAAWC,SAAS,EAAG,KAA1C,YAAkDH,GAE9C,GAAN,OAAUF,EAAV,YAAgBE,IAoFLI,OAhFf,WAAmB,IAAD,EACqBlC,qBAAW/F,GAAtCO,EADM,EACNA,iBAAkBE,EADZ,EACYA,KADZ,EAiBVsF,qBAAW/F,GAZXkI,EALU,EAKVA,eACAtG,EANU,EAMVA,gBACAuG,EAPU,EAOVA,YACAC,EARU,EAQVA,WACAC,EATU,EASVA,mBACAC,EAVU,EAUVA,eACAC,EAXU,EAWVA,iBACAC,EAZU,EAYVA,oBACA5C,EAbU,EAaVA,SACA1E,EAdU,EAcVA,YACAC,EAfU,EAeVA,eACAC,EAhBU,EAgBVA,MAGEqH,EAAYC,iBAAO,MAOnBC,EAAcF,EAAUG,QAAUH,EAAUG,QAAQC,iBAAmB,QACvEC,EAAWL,EAAUG,QAAUH,EAAUG,QAAQG,cAAgB,QAEjErD,EAAc0B,GAAOuB,GACrBhD,EAAgByB,GAAO0B,GAGnBE,EAAe,CAAC,YAG1B,OAFKvI,GAAQuI,EAAaC,KAAK,UAG3B,mCAEI7H,EAAMuB,OACF,sBAAKwD,UAAW6C,EAAaE,KAAK,KAAlC,UACI,cAAC,IAAD,CACIrF,MAAM,IACNb,OAAO,IACPmG,IAAK/H,EAAMb,GAAkBT,IAC7BsJ,IAAKX,EACL9H,QAASO,EAAYP,QACrBC,MAAOM,EAAYN,MACnBC,OAAQK,EAAYL,OACpBC,OAA6B,IAArBI,EAAYJ,OACpBuI,WAAYf,EACZgB,QAAS,kBAAM1D,KACf5E,KAAME,EAAYF,OAEtB,cAAC,GAAD,CAAiBoB,KAAMhB,EAAMb,KAC7B,cAAC,EAAD,CACIW,YAAaA,EACbiE,YAAavD,EACbwD,QAAS+C,EACTrH,OAAQI,EAAYJ,OACpBwE,eAAgB+C,EAChB9C,OAAQgD,EACR/C,gBAAiBgD,EACjB/C,cA1CM,SAACpD,EAAIC,GAC3BnB,EAAe,2BAAKD,GAAN,IAAmBH,SAAS,KAC1C0H,EAAUG,QAAQW,OAAOjH,EAAW,IAAK,aAyCzBoD,YAAaA,EACbC,cAAeA,EACfN,OAAQ+C,EACRxC,SAAUA,EAEVE,aAAc1E,EAAMb,GAAkBR,SACtC8F,WAAYqC,OAIpB,Q,gFCnEDsB,OAlBf,WAAsB,IACV9I,EAAYqF,qBAAW/F,GAAvBU,QAER,OACI,eAAC+I,GAAA,EAAD,CAAkBtD,UAAU,oBAA5B,UACI,cAAC,IAAD,CAAMA,UAAU,0BAAqBU,QAAS,kBAAMnG,GAAQ,IAAOgJ,GAAG,IAAtE,SACI,cAACC,GAAA,EAAD,CAAwBxD,UAAU,yBAAoBuD,GAAG,IAAKE,MAAM,iCAAQ/H,MAAM,UAAUgI,KAAM,cAAC,KAAD,CAAU1D,UAAU,qCAE1H,cAAC,IAAD,CAAMA,UAAU,0BAAqBU,QAAS,kBAAMnG,GAAQ,IAAQgJ,GAAG,cAAvE,SACI,cAACC,GAAA,EAAD,CAAwBxD,UAAU,yBAAoBuD,GAAG,cAAcE,MAAM,uCAAS/H,MAAM,YAAYgI,KAAM,cAAC,KAAD,CAAgB1D,UAAU,qCAE5I,cAAC,IAAD,CAAMA,UAAU,0BAAqBU,QAAS,kBAAMnG,GAAQ,IAAQgJ,GAAG,aAAvE,SACI,cAACC,GAAA,EAAD,CAAwBxD,UAAU,yBAAoBuD,GAAG,aAAaE,MAAM,yDAAY/H,MAAM,WAAWgI,KAAM,cAAC,KAAD,CAAgB1D,UAAU,yC,8BCa1I2D,OAhCf,YAAgC,IAAZpI,EAAW,EAAXA,SACRqI,EAAahE,qBAAW/F,GAAxB+J,SAER,OACI,sBAAK5D,UAAU,eAAf,UACL,sBAAKA,UAAU,uBAAf,UACC,sBAAMA,UAAU,qBAAhB,kFAGA,mBAAGA,UAAU,sBAAb,uIAIAzE,EAASsI,KAAI,SAACC,EAAMlI,GACnB,OACC,eAACmI,GAAA,EAAD,CAAUrD,QAAS,kBAAKkD,EAAShI,IAAQoE,UAAU,qBAAsBgE,QAAM,EAA/E,UACC,cAACC,GAAA,EAAD,CAAQjE,UAAU,oBAAoBO,QAAQ,SAAS5G,IAAKmK,EAAKpK,QAASwK,IAAI,QAE9E,cAACC,GAAA,EAAD,CAAcnE,UAAU,qBAAqBoE,QAASN,EAAKtK,MAAO6K,UAAWP,EAAKrK,SAElF,cAACgH,EAAA,EAAD,CAAYT,UAAU,6BAA6BW,cAAY,SAA/D,SACC,cAAC,IAAD,CAAcX,UAAU,0BAA0BzB,SAAS,gBANwB3C,UCwB5E0I,OAtCf,WAAuB,IAAD,EACiB1E,qBAAW/F,GAAtC0B,EADU,EACVA,SAAUI,EADA,EACAA,aAEf4I,EAAc,GAEpB,IAAI,IAAIC,KAAOjJ,EAAU,CACxB,IAAMuI,EAAOvI,EAASiJ,GACtBD,EAAYzB,KAAKgB,GAGf,OACI,sBAAK9D,UAAU,cAAf,UACL,qBAAKA,UAAU,sBAAf,SACC,mBAAGA,UAAU,qBAAb,sEAIAuE,EAAYV,KAAI,SAACC,EAAMlI,GACtB,OACC,cAAC,IAAD,CAAM2H,GAAG,cAAT,SACC,eAACQ,GAAA,EAAD,CAAU/D,UAAU,oBAAoBU,QAAS,kBAAM/E,EAAamI,EAAKzI,SAAU2I,QAAM,EAAzF,UACC,cAACC,GAAA,EAAD,CAAQjE,UAAU,mBAAmBO,QAAQ,SAAS5G,IAAKmK,EAAKpK,QAASwK,IAAI,QAE7E,cAACC,GAAA,EAAD,CAAcnE,UAAU,oBAAoBoE,QAASN,EAAKtK,MAAO6K,UAAS,UAAKP,EAAKzI,OAAOmB,OAAjB,2CAE1E,cAACiE,EAAA,EAAD,CAAYT,UAAU,4BAA4BW,cAAY,SAA9D,SACC,cAAC,IAAD,CAAcX,UAAU,yBAAyBzB,SAAS,gBANmC3C,YCgBvF6I,OA5Bf,WAAgB,IACPxJ,EAAU2E,qBAAW/F,GAArBoB,MAER,OACC,qBAAKyJ,MAAM,aAAX,SACC,qBAAKA,MAAM,SAAX,SACC,qBAAKA,MAAM,SAAX,SACC,eAAC,IAAD,WACC,sBAAK1E,UAAU,UAAf,UACC,cAAC,GAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,MAClB,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACC,cAAC,GAAD,CAAWrJ,SAAUN,MAEtB,cAAC,IAAD,CAAO2J,KAAK,aAAZ,SACC,cAAC,GAAD,YAIH,cAAC,GAAD,cCvBSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,UACC,cAAC,GAAD,QAGFC,SAASC,eAAe,SAOzBb,M","file":"static/js/main.90c87f1f.chunk.js","sourcesContent":["let All_song = [\r\n\t{\r\n\t\ttitle: \"VO52-V1M\",\r\n\t\tartist: \"20syl\",\r\n\t\timg_src: \"./images/20syl.jpg\",\r\n\t\tsrc: \"./music/20syl - VO52-V1M.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"A New Error\",\r\n\t\tartist: \"Moderat\",\r\n\t\timg_src: \"./images/moderat.jpg\",\r\n\t\tsrc: \"./music/Moderat - A New Error.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Энтропия\",\r\n\t\tartist: \"Mujuice\",\r\n\t\timg_src: \"./images/mujuice.jpg\",\r\n\t\tsrc: \"./music/Mujuice - Энтропия.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Faint\",\r\n\t\tartist: \"Quok\",\r\n\t\timg_src: \"./images/quok.jpg\",\r\n\t\tsrc: \"./music/Quok - Faint.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Stressed Out\",\r\n\t\tartist: \"Twenty One Pilots\",\r\n\t\timg_src: \"./images/tw.gif\",\r\n\t\tsrc: \"./music/Twenty One Pilots - Stressed Out.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Comptine D'un Autre\",\r\n\t\tartist: \"Yann Tiersen\",\r\n\t\timg_src: \"./images/ameli.jpg\",\r\n\t\tsrc: \"./music/Yann_Tiersen_-_Comptine_Dun_Autre_t_Laprs-Midi_48096940.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Komorebi\",\r\n\t\tartist: \"DROELOE\",\r\n\t\timg_src: \"./images/DROELOE - Komorebi.png\",\r\n\t\tsrc: \"./music/DROELOE_-_Komorebi.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"People\",\r\n\t\tartist: \"Whitey\",\r\n\t\timg_src: \"./images/Whitey - People.jpg\",\r\n\t\tsrc: \"./music/Whitey - People.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"Walking All Day\",\r\n\t\tartist: \"Graham Coxon\",\r\n\t\timg_src: \"./images/Graham Coxon - Walking All Day.jpg\",\r\n\t\tsrc: \"./music/Graham Coxon - Walking All Day.mp3\",\r\n\t\tfavorite: false,\r\n\t},\r\n\t{\r\n\t\ttitle: \"adhd\",\r\n\t\tartist: \"slowthai\",\r\n\t\timg_src: \"./images/slowthai - adhd.jpg\",\r\n\t\tsrc: \"./music/slowthai - adhd.mp3\",\r\n\t\tfavorite: false,\r\n\t}    \r\n];\r\n\r\n\r\n\r\n\r\nexport default All_song","import All_song from './songs'\r\n\r\nimport React, { useState } from 'react';\r\nexport const Context = React.createContext({});\r\n\r\nconst Provider = Context.Provider;\r\n\r\nconst ContextApp = ({ children }) => {\r\n    const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n    const [page, setPage] = useState(true) \r\n    const [playerState, setPlayerState] = useState({\r\n        playing: false,\r\n        muted: false,\r\n        volume: 1,\r\n        played: 0,\r\n        seeking: false,\r\n        loop: false,\r\n        fovarite: false,\r\n    });\r\n\r\n    const [songs, setSongs] = useState(All_song); \r\n\r\n    const [playList, setPlayList]  = useState({\r\n        favoritePlayList: {\r\n            id: \"favoritePlayList\",\r\n            title: \"Мой любимые\",\r\n            img_src: \"./images/mujuice.jpg\",\r\n            src: \"./music/Mujuice - Энтропия.mp3\",\r\n            favorite: true,\r\n            tracks: []\r\n        },\r\n        allSongs: {\r\n            id: \"2\",\r\n            title: \"Вся\",\r\n            img_src: \"./images/mujuice.jpg\",\r\n            src: \"./music/Mujuice - Энтропия.mp3\",\r\n            favorite: true, \r\n            tracks: All_song\r\n        },\r\n    })\r\n\r\n    const PickPlayList = (value) => {\r\n        setSongs(value);\r\n        setCurrentSongIndex(0);\r\n    } \r\n\r\n    const PickSong = (index) => {\r\n        if(currentSongIndex === index) {\r\n            handlePlayPause()\r\n        } else {\r\n            setCurrentSongIndex(index) \r\n            setPlayerState( { ...playerState, playing: true});\r\n        }\r\n    } \r\n\r\n    const handleFovorite = () => {\r\n        if(songs[currentSongIndex].favorite) {\r\n            setPlayList({\r\n                ...playList, \r\n                    favoritePlayList: {\r\n                        ...playList.favoritePlayList, \r\n                        tracks: [ ...playList.favoritePlayList.tracks.filter(track => track !== songs[currentSongIndex]) ]\r\n                    } \r\n                })\r\n        }\r\n        if(!songs[currentSongIndex].favorite) {\r\n            setPlayList({\r\n                ...playList, \r\n                    favoritePlayList: {\r\n                        ...playList.favoritePlayList, \r\n                        tracks: [ songs[currentSongIndex], ...playList.favoritePlayList.tracks ]\r\n                    } \r\n                })\r\n        }    \r\n        const prevState = [...songs]\r\n    \r\n        prevState.forEach(song => {\r\n            return song === songs[currentSongIndex] ? song.favorite = !song.favorite : null\r\n        })\r\n        setSongs([...prevState])    \r\n    }; \r\n\r\n    const handlePlayPause = () => {\r\n        setPlayerState( { ...playerState, playing: !playerState.playing });\r\n    };\r\n    \r\n    const handleMuted = () => {\r\n        setPlayerState( { ...playerState, muted: !playerState.muted});\r\n    };\r\n\r\n    const handleLoop = () => {\r\n        setPlayerState( { ...playerState, loop: !playerState.loop });\r\n    }; \r\n\r\n    const handleVolumeChange = (ev, newValue) => {\r\n        setPlayerState( { \r\n            ...playerState, \r\n            volume: parseFloat(newValue / 100),\r\n            muted: newValue === 0 ? true : false,\r\n        });\r\n    };\r\n\r\n    const handleProgress = (changeState) => {\r\n        if(!playerState.seeking) {\r\n            setPlayerState( { ...playerState, ...changeState });\r\n        }\r\n    };\r\n\r\n    const handleSeekChange = (ev, newValue) => {\r\n        setPlayerState({ ...playerState, played: parseFloat(newValue / 100) });\r\n    };\r\n\r\n    const handleSeekMouseDown = (ev) => {\r\n        setPlayerState({ ...playerState, seeking: true });\r\n    };\r\n\r\n    const SkipSong = (forwards = true) => {\r\n        if (forwards) {\r\n            setCurrentSongIndex(() => {\r\n                let temp = currentSongIndex;\r\n                temp++;\r\n\r\n                if (temp > songs.length - 1) {\r\n                    temp = 0;\r\n                }\r\n\r\n                return temp;\r\n            });\r\n        } else {\r\n            setCurrentSongIndex(() => {\r\n                let temp = currentSongIndex;\r\n                temp--;\r\n                if (temp < 0) {\r\n                    temp = songs.length - 1;\r\n                }\r\n                return temp;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Provider value={{\r\n            PickPlayList,\r\n            songs,\r\n            currentSongIndex,\r\n            page,\r\n            setPage,\r\n            currentSongIndex,\r\n            setCurrentSongIndex,\r\n            PickSong,\r\n            playerState,\r\n            setPlayerState,\r\n            handleFovorite,  \r\n            handlePlayPause, \r\n            handleMuted, \r\n            handleLoop, \r\n            handleVolumeChange, \r\n            handleProgress, \r\n            handleSeekChange, \r\n            handleSeekMouseDown, \r\n            SkipSong,\r\n            setPlayerState,\r\n            songs,\r\n            playerState,  \r\n            setPlayerState,\r\n            playList,\r\n        }}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default ContextApp;\r\n","import React, { useContext} from 'react'\r\n\r\n// material ui\r\nimport { IconButton, makeStyles, Slider, withStyles, Tooltip, Typography } from '@material-ui/core';\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport { Context } from \"./Context\";\r\n\r\nconst MySlider = withStyles({\r\n    root: {\r\n      color: '#fff',\r\n      height: 2,\r\n      padding: '10px 0',\r\n    },\r\n    thumb: {\r\n    \r\n      backgroundColor: '#fff',\r\n      boxShadow: '0 3px 1px rgb(0 0 0 / 10%), 0 4px 8px rgb(0 0 0 / 13%), 0 0 0 1px rgb(0 0 0 / 2%)',\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 12px)',\r\n      top: -22,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: '#000',\r\n      },\r\n    },\r\n    track: {\r\n      height: 2,\r\n    },\r\n    rail: {\r\n      height: 2,\r\n      opacity: 0.3,\r\n     \r\n    },\r\n    mark: {\r\n      backgroundColor: 'red',\r\n      height: 8,\r\n      width: 1,\r\n      marginTop: -3,\r\n    },\r\n    markActive: {\r\n      opacity: 1,\r\n      backgroundColor: 'currentColor',\r\n    },\r\n  })(Slider);\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    iconStyleBig: {\r\n        fontSize: 50,\r\n        color: \"#fff\",\r\n        padding: '0',\r\n    },\r\n    iconStyle: {\r\n        color: \"#fff\",\r\n        fontSize: 30,\r\n        padding: '0',\r\n        \"&:hover\": {\r\n            \r\n        }\r\n    },\r\n    sliderWrap: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    time: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n})\r\n\r\nfunction PlayerControls( { \r\n    playerState, \r\n    onPlayPause, \r\n    onMuted, \r\n    onLoop,\r\n    onVolumeChange,played, \r\n    onSeek, \r\n    onSeekMouseDown, \r\n    onSeekMouseUp, \r\n    elapsedTime, \r\n    totalDuration, \r\n    SkipSong, \r\n    onFovorite, \r\n    songfavorite} ) \r\n    {\r\n    \r\n    const { songs, currentSongIndex } = useContext(Context);\r\n\r\n        console.log('check')\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <>  \r\n            <div className={classes.sliderWrap}>\r\n                <MySlider\r\n                    min={0}\r\n                    max={100}\r\n                    value={played * 100}    \r\n                    ValueLabelComponent={(props) => (\r\n                        <ValueLabelComponent {...props} value={elapsedTime} />\r\n                    )}\r\n                    onChange={onSeek}   \r\n                    onMouseDown={onSeekMouseDown}\r\n                    onChangeCommitted={onSeekMouseUp}          \r\n                />\r\n                <time className={classes.time}>\r\n                    <Typography\r\n                        variant=\"body1\"\r\n                        style={{ }}\r\n                    >\r\n                        {elapsedTime}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"body1\"\r\n                        style={{  }}\r\n                    >\r\n                        {totalDuration}\r\n                    </Typography>\r\n                </time>\r\n            </div>   \r\n            <div className={classes.controls}>\r\n                <IconButton onClick={()=> onLoop()} className={classes.iconStyle} arial-label=\"reqind\">\r\n                    { \r\n                        playerState.loop ?\r\n                            <RepeatOneIcon fontSize=\"inherit\"/> :\r\n                            <RepeatIcon fontSize=\"inherit\"/>\r\n                    }\r\n                </IconButton>\r\n\r\n                <IconButton onClick={() => SkipSong(false)} className={classes.iconStyle, classes.iconStyleBig} arial-label=\"reqind\">\r\n                    <SkipPreviousIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n            \r\n                <IconButton onClick={() => onPlayPause()}  className={classes.iconStyle, classes.iconStyleBig} arial-label=\"reqind\">\r\n                    { \r\n                        playerState.playing ?  \r\n                            <PauseCircleOutlineIcon \r\n                                fontSize=\"inherit\"\r\n                            /> :\r\n                            <PlayCircleOutlineIcon \r\n                                fontSize=\"inherit\"                   \r\n                            />\r\n                    }\r\n                </IconButton>\r\n\r\n                <IconButton onClick={() => SkipSong()}  className={classes.iconStyle, classes.iconStyleBig} arial-label=\"reqind\">\r\n                    <SkipNextIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n                <IconButton onClick={() => onFovorite()} className={classes.iconStyle} arial-label=\"reqind\">\r\n                    { \r\n                        songs[currentSongIndex].favorite ?  \r\n                        <FavoriteIcon fontSize=\"inherit\"/>: \r\n                        <FavoriteBorderIcon fontSize=\"inherit\"/>            \r\n                    }\r\n                </IconButton>\r\n                \r\n            </div>    \r\n        \r\n            <div className=\"volume-wrap\">\r\n                <IconButton onClick={()=> onMuted()} className={classes.iconStyle} arial-label=\"reqind\">\r\n                    { \r\n                        playerState.muted ?\r\n                            <VolumeOffIcon fontSize=\"inherit\"/> :\r\n                            <VolumeUp fontSize=\"inherit\"/>\r\n                    }\r\n                </IconButton>\r\n\r\n                <Slider \r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={100}\r\n                    onChange={onVolumeChange}\r\n                />\r\n           </div>\r\n        </>\t\t\r\n    );\r\n}\r\n\r\nexport default PlayerControls;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { CardContent, Typography, Card, IconButton } from '@material-ui/core/';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nfunction PlayerInfoMusic({song}) {\r\n    return (\t\r\n\t\t<>\r\n\t\t\t<Card className=\"c-player-info\">\r\n\t\t\t\t<img className=\"c-player-info__img\" src={song.img_src} title=\"img\"/>\t\r\n\t\t\t\t<div className=\"c-player-info__body\">\r\n\t\t\t\t\t<CardContent className=\"c-player-info__text\">\r\n\t\t\t\t\t\t<Typography className=\"c-player-info__title\" component=\"h7\" variant=\"h7\" style={{color: '#fff'}}>\r\n\t\t\t\t\t\t\t{song.title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography className=\"c-player-info__artist\" variant=\"subtitle1\" color=\"textSecondary\" style={{color: '#fff', opacity: '0.7'}}>\r\n\t\t\t\t\t\t\t{song.artist}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t<IconButton className=\"c-player-info__btn btn-more\" arial-label=\"reqind\" >\r\n\t\t\t\t\t\t<MoreVertIcon className=\"c-player-info__icon icon\" fontSize=\"inherit\"/>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</>\r\n    );\r\n}\r\n\r\nexport default PlayerInfoMusic;\r\n","import React, { useRef, useContext } from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport { Context } from \"./Context\";\r\n\r\n// component\r\nimport PlayerControls from './PlayerControls'\r\nimport PlayerInfoMusic from  './PlayerInfoMusic'\r\n\r\nconst format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return `00:00`;\r\n    }\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n};\r\n\r\n\r\nfunction Player() {\r\n    const { currentSongIndex, page } = useContext(Context);\r\n\r\n    //METOD PLAYER\r\n    const { \r\n        handleFovorite, \r\n        handlePlayPause, \r\n        handleMuted, \r\n        handleLoop, \r\n        handleVolumeChange, \r\n        handleProgress, \r\n        handleSeekChange, \r\n        handleSeekMouseDown, \r\n        SkipSong, \r\n        playerState, \r\n        setPlayerState, \r\n        songs \r\n    } = useContext(Context);\r\n\r\n    const playerRef = useRef(null);\r\n\r\n    const handleSeekMouseUp = (ev, newValue) => {\r\n        setPlayerState({ ...playerState, seeking: false });\r\n        playerRef.current.seekTo(newValue / 100, \"fraction\");\r\n    };\r\n\r\n    const currentTime = playerRef.current ? playerRef.current.getCurrentTime() : '00:00';\r\n    const duration = playerRef.current ? playerRef.current.getDuration() : '00:00';\r\n\r\n    const elapsedTime = format(currentTime)\r\n    const totalDuration = format(duration)\r\n\r\n\r\n        const playerHidden = ['c-player',];\r\n        !page && playerHidden.push('hidden');\r\n\r\n    return (\r\n        <>\r\n        {\r\n            songs.length ? \r\n                <div className={playerHidden.join(' ')}>\r\n                    <ReactPlayer\r\n                        width=\"0\"\r\n                        height=\"0\"\r\n                        url={songs[currentSongIndex].src}\r\n                        ref={playerRef}    \r\n                        playing={playerState.playing}\r\n                        muted={playerState.muted}\r\n                        volume={playerState.volume}\r\n                        played={playerState.played * 100}\r\n                        onProgress={handleProgress}\r\n                        onEnded={() => SkipSong()}\r\n                        loop={playerState.loop}\r\n                    />\r\n                    <PlayerInfoMusic song={songs[currentSongIndex]}/>\r\n                    <PlayerControls \r\n                        playerState={playerState} \r\n                        onPlayPause={handlePlayPause} \r\n                        onMuted={handleMuted}   \r\n                        played={playerState.played}\r\n                        onVolumeChange={handleVolumeChange}\r\n                        onSeek={handleSeekChange}\r\n                        onSeekMouseDown={handleSeekMouseDown}\r\n                        onSeekMouseUp={handleSeekMouseUp}\r\n                        elapsedTime={elapsedTime}\r\n                        totalDuration={totalDuration}\r\n                        onLoop={handleLoop}\r\n                        SkipSong={SkipSong}\r\n\r\n                        songfavorite={songs[currentSongIndex].favorite}\r\n                        onFovorite={handleFovorite}\r\n                    />\r\n                </div>\t\r\n                :\r\n                null\r\n            }     \r\n        </>\t\r\n    );\r\n}\r\n\r\nexport default Player;\r\n\r\n\r\n","import React, { useContext } from 'react'\r\n\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n// material ui\r\nimport {  BottomNavigation, BottomNavigationAction } from '@material-ui/core';\r\n\r\nimport { Context } from \"./Context\";\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\n\r\nfunction BottomNav() {\r\n    const { setPage } = useContext(Context);\r\n\r\n    return (\r\n        <BottomNavigation className=\"с-bottom-nav\">\r\n            <Link className=\"с-bottom-nav__link\" onClick={() => setPage(true)} to=\"/\">\r\n                <BottomNavigationAction className=\"с-bottom-nav__btn\" to=\"/\"  label=\"Плеер\" value=\"recents\" icon={<HomeIcon className=\"с-bottom-nav__icon icon\"/>} />\r\n            </Link>\r\n            <Link className=\"с-bottom-nav__link\" onClick={() => setPage(false)} to=\"/list-music\">\r\n                <BottomNavigationAction className=\"с-bottom-nav__btn\" to=\"/list-music\" label=\"Музыка\" value=\"favorites\" icon={<QueueMusicIcon className=\"с-bottom-nav__icon icon\"/>} />\r\n            </Link>\r\n            <Link className=\"с-bottom-nav__link\" onClick={() => setPage(false)} to=\"/play-list\">  \r\n                <BottomNavigationAction className=\"с-bottom-nav__btn\" to=\"/play-list\" label=\"Плейлисты\" value=\"playlist\" icon={<FolderOpenIcon className=\"с-bottom-nav__icon icon\"/>} />\r\n            </Link>\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\nexport default BottomNav;\r\n","import React, { useContext } from 'react'\r\nimport { ListItemText, ListItem, IconButton, Avatar } from '@material-ui/core/';\r\nimport { Context } from \"./Context\";\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nfunction ListMusic({playList}) {\r\n    const { PickSong } = useContext(Context);\r\n\t\r\n    return (\r\n        <div className=\"c-list-music\">\r\n\t\t\t<div className=\"c-list-music__header\">\r\n\t\t\t\t<span className=\"c-list-music__disc\">\r\n\t\t\t\t\tCейчас играет\r\n\t\t\t\t</span>\r\n\t\t\t\t<p className=\"c-list-music__title\">Плейлист \"Мне нравится\"</p>\r\n\t\t\t</div>\r\n\r\n            { \r\n\t\t\t\tplayList.map((item, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListItem onClick={()=> PickSong(index)} className=\"c-list-music__item\"  button key={index}>\r\n\t\t\t\t\t\t\t<Avatar className=\"c-list-music__img\" variant=\"square\" src={item.img_src} alt=\"img\"/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ListItemText className=\"c-list-music__text\" primary={item.title} secondary={item.artist} />\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t<IconButton className=\"c-list-music__btn btn-more\" arial-label=\"reqind\">\r\n\t\t\t\t\t\t\t\t<MoreVertIcon className=\"c-list-music__icon icon\" fontSize=\"inherit\"/>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListMusic;\r\n","import React, { useContext } from 'react'\r\nimport { ListItemText, ListItem, IconButton, Avatar } from '@material-ui/core/';\r\nimport { Context } from \"./Context\";\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nfunction MyPlayList() {\r\n    const { playList, PickPlayList } = useContext(Context);\r\n\t\r\n\tconst playListArr = [];\r\n\r\n\tfor(let key in playList) {\r\n\t\tconst item = playList[key];\r\n\t\tplayListArr.push(item);\r\n\t}\r\n\r\n    return (\r\n        <div className=\"c-play-list\">\r\n\t\t\t<div className=\"c-play-list__header\">\r\n\t\t\t\t<p className=\"c-play-list__title\">Плейлисты</p>\r\n\t\t\t</div>\r\n\r\n            { \r\n\t\t\t\tplayListArr.map((item, index) => {\r\n\t\t\t\t\treturn (\t\r\n\t\t\t\t\t\t<Link to=\"/list-music\">\r\n\t\t\t\t\t\t\t<ListItem className=\"c-play-list__item\" onClick={() => PickPlayList(item.tracks)}  button key={index}>\r\n\t\t\t\t\t\t\t\t<Avatar className=\"c-play-list__img\" variant=\"square\" src={item.img_src} alt=\"img\"/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<ListItemText className=\"c-play-list__text\" primary={item.title} secondary={`${item.tracks.length} треков`} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<IconButton className=\"c-play-list__btn btn-more\" arial-label=\"reqind\">\r\n\t\t\t\t\t\t\t\t\t<MoreVertIcon className=\"c-play-list__icon icon\" fontSize=\"inherit\"/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPlayList;\r\n","import './App.css';\r\nimport React, {useContext } from 'react'\r\nimport { Context} from './components/Context'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\n// compnent\r\nimport Player from './components/Player'\r\nimport BottomNav from './components/BottomNav'\r\nimport ListMusic from './components/ListMusic'\r\nimport MyPlayList from './components/MyPlayList'\r\n\r\nfunction App() {\r\n\tconst { songs } = useContext(Context);\r\n\r\n\treturn (\r\n\t\t<div class=\"background\">\r\n\t\t\t<div class=\"iphone\">\r\n\t\t\t\t<div class=\"screen\">\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t\t\t<Player />\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route exact path=\"/\"></Route>\r\n\t\t\t\t\t\t\t\t<Route path=\"/list-music\">\r\n\t\t\t\t\t\t\t\t\t<ListMusic playList={songs} />\r\n\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t<Route path=\"/play-list\">\r\n\t\t\t\t\t\t\t\t\t<MyPlayList  />\r\n\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t</Switch>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<BottomNav/>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n  \t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Context from \"./components/Context\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Context>\r\n\t\t\t<App />\r\n\t\t</Context>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}